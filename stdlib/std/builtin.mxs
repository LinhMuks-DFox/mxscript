class Object {
}


class Error : Object {}



@@template(Origin)
func to_string(obj: Origin) -> string {
    obj.to_string();
}

@@template<Origin=int>
func to_string(obj: Origin) -> string {
    obj.to_string();
}


@@template<Origin=float>
func to_string(obj: Origin) -> string {
    obj.to_string();
}
@@template<Origin=bool>
func to_string(obj: Origin) -> string {
    obj.to_string();
}

@@template(Target, Origin)
func cast(target_type:Target, value: T) -> Target | Error {
    return match target_type.from_type<T>(value) {
        case res: Target => {
            res;
        }
        case err: Error => {
            err;
        }
    };
    
}
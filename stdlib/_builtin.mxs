# Autogenerated builtin standard library

# --- Global Functions ---
@@foreign(lib="runtime.so", symbol_name="mxs_print_object_ext")
func print(object: Object, end: String = "\n") -> Nil;

@@foreign(lib="runtime.so", symbol_name="mxs_get_object_type_name")
func type_of(obj: Object) -> String;

@@foreign(lib="runtime.so", symbol_name="mxs_is_instance")
func is_instance(obj: Object, target: Object) -> Boolean;

@@template(Target, Origin)
func cast(target_type: Target, value: Origin) -> Target | Error {
    return target_type.from(value);
}

# --- Class Definitions ---
class Integer {
    @@foreign(lib="runtime.so", symbol_name="mxs_integer_add_integer")
    operator+(other: Integer) -> Integer;
    @@foreign(lib="runtime.so", symbol_name="mxs_integer_add_float")
    operator+(other: Float) -> Float;
    @@foreign(lib="runtime.so", symbol_name="mxs_integer_sub_integer")
    operator-(other: Integer) -> Integer;
    @@foreign(lib="runtime.so", symbol_name="mxs_integer_sub_float")
    operator-(other: Float) -> Float;
    @@foreign(lib="runtime.so", symbol_name="mxs_integer_mul_integer")
    operator*(other: Integer) -> Integer;
    @@foreign(lib="runtime.so", symbol_name="mxs_integer_mul_float")
    operator*(other: Float) -> Float;
    @@foreign(lib="runtime.so", symbol_name="mxs_integer_div_integer")
    operator/(other: Integer) -> Integer;
    @@foreign(lib="runtime.so", symbol_name="mxs_integer_div_float")
    operator/(other: Float) -> Float;
    @@foreign(lib="runtime.so", symbol_name="mxs_integer_eq_integer")
    operator==(other: Integer) -> Boolean;
    @@foreign(lib="runtime.so", symbol_name="mxs_integer_eq_float")
    operator==(other: Float) -> Boolean;
    @@foreign(lib="runtime.so", symbol_name="mxs_integer_ne_integer")
    operator!=(other: Integer) -> Boolean;
    @@foreign(lib="runtime.so", symbol_name="mxs_integer_ne_float")
    operator!=(other: Float) -> Boolean;
    @@foreign(lib="runtime.so", symbol_name="mxs_integer_lt_integer")
    operator<(other: Integer) -> Boolean;
    @@foreign(lib="runtime.so", symbol_name="mxs_integer_lt_float")
    operator<(other: Float) -> Boolean;
    @@foreign(lib="runtime.so", symbol_name="mxs_integer_gt_integer")
    operator>(other: Integer) -> Boolean;
    @@foreign(lib="runtime.so", symbol_name="mxs_integer_gt_float")
    operator>(other: Float) -> Boolean;
    @@foreign(lib="runtime.so", symbol_name="mxs_integer_le_integer")
    operator<=(other: Integer) -> Boolean;
    @@foreign(lib="runtime.so", symbol_name="mxs_integer_le_float")
    operator<=(other: Float) -> Boolean;
    @@foreign(lib="runtime.so", symbol_name="mxs_integer_ge_integer")
    operator>=(other: Integer) -> Boolean;
    @@foreign(lib="runtime.so", symbol_name="mxs_integer_ge_float")
    operator>=(other: Float) -> Boolean;
}

class Float {
    @@foreign(lib="runtime.so", symbol_name="mxs_float_add_integer")
    operator+(other: Integer) -> Float;
    @@foreign(lib="runtime.so", symbol_name="mxs_float_add_float")
    operator+(other: Float) -> Float;
    @@foreign(lib="runtime.so", symbol_name="mxs_float_sub_integer")
    operator-(other: Integer) -> Float;
    @@foreign(lib="runtime.so", symbol_name="mxs_float_sub_float")
    operator-(other: Float) -> Float;
    @@foreign(lib="runtime.so", symbol_name="mxs_float_mul_integer")
    operator*(other: Integer) -> Float;
    @@foreign(lib="runtime.so", symbol_name="mxs_float_mul_float")
    operator*(other: Float) -> Float;
    @@foreign(lib="runtime.so", symbol_name="mxs_float_div_integer")
    operator/(other: Integer) -> Float;
    @@foreign(lib="runtime.so", symbol_name="mxs_float_div_float")
    operator/(other: Float) -> Float;
    @@foreign(lib="runtime.so", symbol_name="mxs_float_eq_integer")
    operator==(other: Integer) -> Boolean;
    @@foreign(lib="runtime.so", symbol_name="mxs_float_eq_float")
    operator==(other: Float) -> Boolean;
    @@foreign(lib="runtime.so", symbol_name="mxs_float_ne_integer")
    operator!=(other: Integer) -> Boolean;
    @@foreign(lib="runtime.so", symbol_name="mxs_float_ne_float")
    operator!=(other: Float) -> Boolean;
    @@foreign(lib="runtime.so", symbol_name="mxs_float_lt_integer")
    operator<(other: Integer) -> Boolean;
    @@foreign(lib="runtime.so", symbol_name="mxs_float_lt_float")
    operator<(other: Float) -> Boolean;
    @@foreign(lib="runtime.so", symbol_name="mxs_float_gt_integer")
    operator>(other: Integer) -> Boolean;
    @@foreign(lib="runtime.so", symbol_name="mxs_float_gt_float")
    operator>(other: Float) -> Boolean;
    @@foreign(lib="runtime.so", symbol_name="mxs_float_le_integer")
    operator<=(other: Integer) -> Boolean;
    @@foreign(lib="runtime.so", symbol_name="mxs_float_le_float")
    operator<=(other: Float) -> Boolean;
    @@foreign(lib="runtime.so", symbol_name="mxs_float_ge_integer")
    operator>=(other: Integer) -> Boolean;
    @@foreign(lib="runtime.so", symbol_name="mxs_float_ge_float")
    operator>=(other: Float) -> Boolean;
}

class String {
    @@foreign(lib="runtime.so", symbol_name="mxs_string_from_integer")
    static func from(value: Integer) -> String;
    @@foreign(lib="runtime.so", symbol_name="mxs_string_concat")
    operator+(other: String) -> String;
}

class Boolean {
    @@foreign(lib="runtime.so", symbol_name="boolean_and_boolean")
    func and(other: Boolean) -> Boolean;
    @@foreign(lib="runtime.so", symbol_name="boolean_or_boolean")
    func or(other: Boolean) -> Boolean;
    @@foreign(lib="runtime.so", symbol_name="boolean_not")
    func not() -> Boolean;
}

@@template(T)
class List {
    @@foreign(lib="runtime.so", symbol_name="mxs_list_append")
    func append(value: T) -> Nil;
    @@foreign(lib="runtime.so", symbol_name="mxs_list_pop")
    func pop() -> T | Error;
    @@foreign(lib="runtime.so", symbol_name="mxs_list_extend")
    func extend(other: List<T>) -> Nil;
    @@foreign(lib="runtime.so", symbol_name="mxs_list_index_of")
    func index_of(value: T) -> Integer | Nil;
    @@foreign(lib="runtime.so", symbol_name="mxs_list_length")
    func length() -> Integer;
    @@foreign(lib="runtime.so", symbol_name="mxs_list_insert")
    func insert(index: Integer, value: T) -> Nil;
    @@foreign(lib="runtime.so", symbol_name="mxs_list_remove")
    func remove(value: T) -> Nil | Error;
    @@foreign(lib="runtime.so", symbol_name="mxs_list_add_list")
    operator+(other: List<T>) -> List<T>;
    @@foreign(lib="runtime.so", symbol_name="mxs_list_mul_integer")
    operator*(count: Integer) -> List<T>;
    @@foreign(lib="runtime.so", symbol_name="mxs_list_getitem")
    operator[](index: Integer) -> T | Error;
    @@foreign(lib="runtime.so", symbol_name="mxs_list_setitem")
    operator[]=(index: Integer, value: T) -> Nil;
}

@@foreign(lib="runtime.so", symbol_name="mxs_int_absolute")
func abs(value: Integer) -> Integer;
